# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

# on:
#   release:
#     types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        pip install poetry-dynamic-versioning
    - name: Build and publish
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry config pypi-token.pypi $PYPI_TOKEN
        poetry publish --build
  docker: 
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    - name: Build Container
      run: |
        docker build . -t craftamap/pluploader:${{ github.event.release.tag_name }} --build-arg PL_VERSION=${{ github.event.release.tag_name }}
        docker tag craftamap/pluploader:${{ github.event.release.tag_name }}  craftamap/pluploader:latest
    - name: Push the versioned Docker image
      run: docker push craftamap/pluploader:${{ github.event.release.tag_name }}
    - name: Push the latest Docker image
      run: docker push craftamap/pluploader:latest
